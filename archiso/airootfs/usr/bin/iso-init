#!/bin/bash
# Copyright (C) 2025 PrismOS
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

set -oue pipefail

__whitelist=(
    "/usr/lib/polkit-1/polkit-agent-helper-1"
)
__is_in_whitelist() {
    local binary="$1"
    [[ " ${__whitelist[*]} " == *" $binary "* ]]
}
__set_caps() {
    local caps="$1"
    local binary="$2"
    if [[ -e "$binary" && -f "$binary" ]]; then
        echo "Setting capabilities: $caps on $binary"
        if setcap "$caps" "$binary"; then
            echo "Successfully set capabilities: $caps on $binary"
        else
            echo "Failed to set capabilities: $caps on $binary" >&2
        fi
    fi
}
__main() {
    pacman-key --init
    pacman-key --populate archlinux prismos
    pacman --noconfirm -Rns gnome-software gnome-contacts gnome-weather gnome-logs gnome-maps lftp malcontent epiphany gnome-tour gnome-calendar gnome-contacts gnome-music totem gnome-user-share decibels rygel gnome-remote-desktop gnome-connections gnome-console

    systemctl disable avahi-daemon.socket
    systemctl mask avahi-daemon.socket
    systemctl disable avahi-daemon.service
    systemctl mask avahi-daemon.service
    systemctl disable alsa-state
    systemctl mask alsa-state
    systemctl disable geoclue
    systemctl mask geoclue
    systemctl disable sshd
    systemctl mask sshd
    
    systemctl set-default multi-user.target
    rm "/var/log/pacman.log"
    rm -rf "/var/cache/pacman/pkg/"
    files=("/usr/bin/chsh" "/usr/bin/chfn" "/usr/bin/pkexec" "/usr/bin/sudo" "/usr/bin/su" "/usr/bin/ksu" "/usr/bin/sg" "/usr/share/applications/gnome-online-accounts-panel.desktop" "/usr/share/applications/qv4l2.desktop" "/usr/share/applications/qvidcap.desktop" "/usr/share/applications/google-maps-geo-handler.desktop")
    for file in "${files[@]}"; do
        rm -f "$file"
    done
    find /usr -type f \( -perm /4000 -o -perm /2000 \) -print0 | while IFS= read -r -d '' binary; do
        if ! __is_in_whitelist "$binary"; then
            if [ -u "$binary" ]; then
                chmod u-s "$binary"
                echo "Removed SUID bit from $binary"
            fi
            if [ -g "$binary" ]; then
                chmod g-s "$binary"
                echo "Removed SGID bit from $binary"
            fi
         fi
    done
    __set_caps "cap_dac_read_search,cap_audit_write=ep" "/usr/bin/chage"
    __set_caps "cap_sys_admin=ep" "/usr/bin/fusermount3"
    __set_caps "cap_dac_read_search,cap_audit_write=ep" "/usr/bin/unix_chkpwd"
    glib-compile-schemas /usr/share/glib-2.0/schemas
}
__main
rm -f "$0"
